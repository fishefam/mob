/* eslint-disable no-var, @typescript-eslint/consistent-type-imports */

/* ================================================================================================================ */
/* ================================================================================================================ */
/* ================================================ Shared Types & Modules ======================================== */
/* ================================================================================================================ */
/* ================================================================================================================ */

type Platform = 'browser' | 'node'
type ObjectString = `{${string}}`
type ArrayString = `[${string}]`
type BoolString = 'false' | 'true'
type NodeVariables<T extends Record<number | string, string>> = Partial<T>
type AutoGeneratedSuffix = '.autogenerated.'
type AutoGeneratedFile = `bincmds${AutoGeneratedSuffix}d.ts` | `workers${AutoGeneratedSuffix}d.ts`

declare module NodeJS {
  interface ProcessEnv
    extends NodeVariables<
      {
        DEV_URLS: ArrayString
        ELECTRON_CMD: 'make' | 'package' | 'start'
        ENV: 'development' | 'production'
      } & { [key in 'PASSWORD' | 'USER']: string }
    > {}
}

/* ================================================================================================================ */
/* ================================================================================================================ */
/* =========================================== Dependencies & Custom Modules ====================================== */
/* ================================================================================================================ */
/* ================================================================================================================ */

declare module React {
  type React = import('react')
  type SetState<T> = React.Dispatch<React.SetStateAction<T>>
}

declare module Build {
  type EntrySuffix = '.entry.'
  type Entries = { in: 'forge.config.ts' | `${string}${EntrySuffix}${string}`; out: string }[]
  type Options = import('esbuild').BuildOptions
  type Context = import('esbuild').BuildContext
}

declare module ScriptLibs {
  type Color = 'black' | 'blue' | 'cyan' | 'gray' | 'green' | 'magenta' | 'red' | 'white' | 'yellow'
  type ColorizeInput = { bg?: Color; color?: Color; text: string }
}

declare module SrcLibs {
  type Color = 'black' | 'blue' | 'cyan' | 'gray' | 'green' | 'magenta' | 'red' | 'white' | 'yellow'
  type ColorizeInput = { bg?: Color; color?: Color; text: string }
}
